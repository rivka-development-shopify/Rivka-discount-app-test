// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Session {
  session_id  String    @id @default(auto()) @map("_id") @db.ObjectId
  id          String    @unique
  shop        String
  state       String
  isOnline    Boolean   @default(false)
  scope       String?
  expires     DateTime?
  accessToken String
  userId      BigInt?
}

model DiscountCode {
  id                    String            @id @map("_id") @default(auto()) @db.ObjectId
  code                  String
  enabled               Boolean
  stackDiscounts        String[]
  productsToApply       Product[]         @relation("discountApply")
  collectionsToApply    Collection[]      @relation("discountApply")
  productsToIgnore      Product[]         @relation("discountIgnore")
  collectionsToIgnore   Collection[]      @relation("discountIgnore")
}

model Collection {
  id          String    @id @map("_id") @default(auto()) @db.ObjectId
  shopify_id  String
  title       String
  image       CollectionImage?        @relation("collectionImage")

  discountApply     DiscountCode?     @relation(fields: [discountCodeApplyId], references: [id], name: "discountApply")
  discountCodeApplyId   String?       @db.ObjectId
  discountIgnore     DiscountCode?    @relation(fields: [discountCodeIgnoreId], references: [id], name: "discountIgnore")
  discountCodeIgnoreId   String?      @db.ObjectId
}

model CollectionImage {
  id            String            @id @map("_id") @default(auto()) @db.ObjectId
  originalSrc   String
  altText       String

  collection     Collection?      @relation(fields: [collectionId], references: [id], name: "collectionImage")
  collectionId   String?          @db.ObjectId @unique

}

model ProductImage {
  id            String            @id @map("_id") @default(auto()) @db.ObjectId
  originalSrc   String
  altText       String

  product     Product?            @relation(fields: [productId], references: [id], name: "productImage")
  productId   String?             @db.ObjectId @unique

}

model Product {
  id              String              @id @map("_id") @default(auto()) @db.ObjectId
  shopify_id      String
  title           String
  image           ProductImage?       @relation("productImage")
  variants        Variant[]           @relation("productVariant")

  discountApply     DiscountCode?     @relation(fields: [discountCodeApplyId], references: [id], name: "discountApply")
  discountCodeApplyId   String?       @db.ObjectId
  discountIgnore     DiscountCode?    @relation(fields: [discountCodeIgnoreId], references: [id], name: "discountIgnore")
  discountCodeIgnoreId   String?      @db.ObjectId

}

model Variant {
  id          String    @id @map("_id") @default(auto()) @db.ObjectId
  shopify_id  String
  displayName String

  product     Product?            @relation(fields: [productId], references: [id], name: "productVariant")
  productId   String?             @db.ObjectId
}
